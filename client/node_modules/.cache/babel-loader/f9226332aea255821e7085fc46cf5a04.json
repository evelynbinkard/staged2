{"ast":null,"code":"var _jsxFileName = \"/Users/evelynbinkard/Desktop/Projects/staged2/client/src/components/LookList.js\";\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst getLooksQuery = gql`\n    {\n        looks{\n            description\n            id\n        }\n    }\n`;\n\nclass LookList extends Component {\n  displayLooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 19\n        }\n      }, \"loading looks...\");\n    } else {\n      return data.looks.map(look => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: look.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }\n        }, look.description);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"look-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, this.displayLooks()));\n  }\n\n}\n\nexport default graphql(getLooksQuery)(LookList);","map":{"version":3,"sources":["/Users/evelynbinkard/Desktop/Projects/staged2/client/src/components/LookList.js"],"names":["React","Component","gql","graphql","getLooksQuery","LookList","displayLooks","data","props","loading","looks","map","look","id","description","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,aAAa,GAAGF,GAAI;;;;;;;CAA1B;;AASA,MAAMG,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,YAAY,GAAE;AACV,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAIA,IAAI,CAACE,OAAT,EAAkB;AACd,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR;AACH,KAFD,MAEO;AACL,aAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC1B,4BACI;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,IAAI,CAACE,WAAzB,CADJ;AAGH,OAJM,CAAP;AAKD;AACJ;;AACDC,EAAAA,MAAM,GAAE;AACN,wBACE,uDACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKT,YAAL,EADN,CADF,CADF;AAOD;;AArB8B;;AAwBjC,eAAeH,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\n\nconst getLooksQuery = gql`\n    {\n        looks{\n            description\n            id\n        }\n    }\n`\n\nclass LookList extends Component {\n  displayLooks(){\n      var data = this.props.data;\n      if (data.loading) {\n          return (<div>loading looks...</div>);\n      } else {\n        return data.looks.map(look => {\n            return (\n                <li key={look.id}>{ look.description }</li>\n            )\n        })\n      }\n  }\n  render(){\n    return (\n      <>\n        <ul id=\"look-list\">\n            { this.displayLooks() }\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default graphql(getLooksQuery)(LookList);\n"]},"metadata":{},"sourceType":"module"}